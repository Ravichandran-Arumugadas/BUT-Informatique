-- Voici les rôles

-- Pour l'étudiant 


CREATE ROLE est_un_etudiant; 

GRANT SELECT ON vue_notes_etudiant TO est_un_etudiant;  

REVOKE INSERT,UPDATE,DELETE TO est_un_etudiant; 

 
---------------------------------------------------------------------------------------------- 

-- Pour l'enseignant 

CREATE ROLE est_un_enseignant; 

GRANT (INSERT,UPDATE,SELECT,DELETE) ON (note,controle) TO est_un_enseignant; 

GRANT EXECUTION FUNCTION ON saisir_note(int, int, int, float) TO est_un_enseignant; 

 
 
----------------------------------------------------------------------------------------------

-- Pour l'administrateur
 

CREATE ROLE est_un_admin LOGIN PASSWORD ‘iut_admin’; 

GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO est_un_admin WITH GRANT OPTION; 

----------------------------------------------------------------------------------------------



-- Cette vue permet de voir la note selon le type d’utilisateur : 

CREATE VIEW vue_notes_etudiant AS 
SELECT * FROM note 
JOIN controle ON note.id_controle = controle.id_controle 
WHERE note.id_etudiant = current_user; 


-- Cette fonction permet à entrer des notes pour l’enseignant en particulier mais l’administrateur a aussi ces permissions 

CREATE OR REPLACE FUNCTION saisir_note (id_etudiant int, id_controle int, id_matiere int, note FLOAT)  
RETURNS VOID AS $$ 
BEGIN 
INSERT INTO note (id_etudiant, id_controle, id_matiere, note)	VALUES ($1, $2, $3, $4); 
END; 
$$ language plpgsql SECURITY DEFINER;


